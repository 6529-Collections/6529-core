name: Build Windows

on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      version:
        required: true
        type: string
      should_run:
        required: true
        type: boolean

jobs:
  sign-windows:
    name: ${{ inputs.env }} - v${{ inputs.version }} | SIGN
    runs-on: windows-latest
    if: ${{ inputs.should_run == 'true' }}

    steps:
      - name: Check out
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install signing dependencies
        working-directory: ./sign-win
        run: npm ci

      - name: Set up environment variables
        run: |
          echo "AZURE_KEY_VAULT_URL=${{ secrets.AZURE_KEY_VAULT_URL }}" >> $env:GITHUB_ENV
          echo "AZURE_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $env:GITHUB_ENV
          echo "AZURE_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}" >> $env:GITHUB_ENV
          echo "AZURE_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $env:GITHUB_ENV
          echo "CERT_NAME=${{ secrets.CERT_NAME }}" >> $env:GITHUB_ENV

      - name: Install AzureSignTool
        run: dotnet tool install --global AzureSignTool

      - name: Add dotnet tools to PATH
        run: echo "$env:USERPROFILE\\.dotnet\\tools" | Out-File -Append -FilePath $env:GITHUB_PATH -Encoding utf8
        shell: pwsh

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sign executables & upload to S3
        working-directory: ./sign-win
        shell: pwsh
        run: |
          if ("${{ inputs.env }}" -eq "Staging") {
            npm run sign-publish-staging-win
          } else {
            npm run sign-publish-production-win
          }
