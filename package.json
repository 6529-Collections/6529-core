{
  "name": "6529-core",
  "version": "0.1.37",
  "author": {
    "name": "6529",
    "email": "6529@6529.io"
  },
  "description": "6529 CORE APP",
  "private": false,
  "license": "MIT",
  "main": "main/electron-src/index.js",
  "scripts": {
    "pull-web": "git subtree pull --prefix=renderer https://github.com/6529-Collections/6529seize-frontend.git main",
    "postinstall": "electron-builder install-app-deps",
    "clean": "rm -rf dist main renderer/out renderer/.next",
    "clean-win": "rimraf dist main renderer/out renderer/.next",
    "dev": "npm run clean && npm run build-electron && ENVIRONMENT=staging electron . --dev",
    "dev-win": "npm run clean-win && npm run build-electron-win && ENVIRONMENT=staging electron . --dev",
    "rebuild-sql": "npx electron-rebuild -f -w better-sqlite3",
    "build-renderer": "next build renderer",
    "build-electron": "tsc -p electron-src && cp -r assets main/electron-src/",
    "build-electron-win": "tsc -p electron-src && xcopy /E /I assets main\\electron-src\\assets\\",
    "build": "npm run clean && npm run build-renderer && npm run build-electron",
    "build-win": "npm run clean-win && npm run build-renderer && npm run build-electron-win",
    "dist-win-staging": "npm run build && electron-builder --config electron-builder.staging.json --win --x64 --publish never",
    "dist-win-staging-upload": "npm run dist-win-staging && npm run upload-staging-win-unsigned",
    "dist-win-production": "npm run build && electron-builder --config electron-builder.production.json --win --x64 --arm64 --publish never",
    "dist-win-production-upload": "npm run dist-win-production && npm run upload-production-win-unsigned",
    "clear-staging-win-unsigned": "aws s3 rm s3://6529bucket/6529-staging-core-app/win-unsigned/ --recursive",
    "clear-production-win-unsigned": "aws s3 rm s3://6529bucket/6529-core-app/win-unsigned/ --recursive",
    "upload-staging-win-unsigned": "npm run clear-staging-win-unsigned && aws s3 sync ./dist s3://6529bucket/6529-staging-core-app/win-unsigned/ --exclude '*' --include '*.exe' --include '*.blockmap' --include 'latest.yml' --exclude '*/**'",
    "upload-production-win-unsigned": "npm run clear-production-win-unsigned && aws s3 sync ./dist s3://6529bucket/6529-core-app/win-unsigned/ --exclude '*' --include '*.exe' --include '*.blockmap' --include 'latest.yml' --exclude '*/**'",
    "download-staging-win-unsigned": "aws s3 sync s3://6529bucket/6529-staging-core-app/win-unsigned/ ./dist",
    "download-production-win-unsigned": "aws s3 sync s3://6529bucket/6529-core-app/win-unsigned/ ./dist",
    "win-update-latest": "tsx sign-win/win-update-latest.ts",
    "sign-win": "tsx sign-win/sign-win.ts && npm run win-update-latest",
    "upload-staging-win-signed": "aws s3 sync ./dist s3://6529bucket/6529-staging-core-app/win/",
    "upload-production-win-signed": "aws s3 sync ./dist s3://6529bucket/6529-core-app/win/",
    "sign-publish-staging-win": "npm run clean-win && npm run download-staging-win-unsigned && npm run sign-win && npm run upload-staging-win-signed",
    "sign-publish-production-win": "npm run clean-win && npm run download-production-win-unsigned && npm run sign-win && npm run upload-production-win-signed",
    "dist-mac-local": "npm run build && electron-builder --config electron-builder.local.json --mac --arm64 --publish never",
    "dist-mac-staging": "npm run build && electron-builder --config electron-builder.staging.json --mac --arm64 --publish always",
    "dist-mac-production": "npm run build && electron-builder --config electron-builder.production.json --mac --arm64 --x64 --publish always",
    "dist-mac-production-x64": "npm run build && electron-builder --config electron-builder.production-mac-x64.json --mac --publish never",
    "dist-mac-production-arm64": "npm run build && electron-builder --config electron-builder.production-mac-arm64.json --mac --publish never",
    "dist-linux-staging": "npm run build && electron-builder --config electron-builder.staging.json --linux --x64 --publish always",
    "dist-linux-production": "npm run build && electron-builder --config electron-builder.production.json --linux --x64 --publish always",
    "type-check": "tsc -p ./renderer/tsconfig.json && tsc -p ./electron-src/tsconfig.json",
    "publish-links-staging": "tsx scripts/publish-links.ts --staging --skip-arweave",
    "publish-links-staging-arweave": "tsx scripts/publish-links.ts --staging",
    "publish-links-production": "tsx scripts/publish-links.ts --skip-arweave",
    "publish-links-production-arweave": "tsx scripts/publish-links.ts"
  },
  "dependencies": {
    "@emoji-mart/data": "^1.2.1",
    "@emoji-mart/react": "^1.1.1",
    "@fortawesome/fontawesome-svg-core": "^6.7.2",
    "@fortawesome/free-regular-svg-icons": "^6.7.2",
    "@fortawesome/free-solid-svg-icons": "^6.7.2",
    "@fortawesome/react-fontawesome": "^0.2.2",
    "@google/model-viewer": "^3.5.0",
    "@headlessui/react": "^2.2.2",
    "@heroicons/react": "^2.2.0",
    "@lexical/react": "^0.16.1",
    "@mojs/core": "^1.7.1",
    "@reduxjs/toolkit": "^2.2.5",
    "@reown/appkit": "^1.8.2",
    "@reown/appkit-adapter-wagmi": "^1.8.2",
    "@tailwindcss/container-queries": "^0.1.1",
    "@tailwindcss/forms": "^0.5.7",
    "@tanstack/query-core": "^5.45.0",
    "@tanstack/react-query": "^5.45.1",
    "@tanstack/react-query-devtools": "^5.45.1",
    "@testing-library/react": "^16.3.0",
    "app-root-path": "^3.1.0",
    "axios": "^1.7.9",
    "better-sqlite3": "12.0.0",
    "bootstrap": "^5.3.3",
    "bottleneck": "^2.19.5",
    "chart.js": "^4.4.9",
    "csv-parser": "^3.0.0",
    "dotenv": "^16.4.5",
    "electron-context-menu": "^3.6.1",
    "electron-localshortcut": "^3.2.1",
    "electron-log": "^5.1.7",
    "electron-notarize": "^1.2.2",
    "electron-store": "^10.0.0",
    "electron-updater": "^6.2.1",
    "emoji-mart": "^5.6.0",
    "ethereum-cryptography": "^2.2.0",
    "ethers": "^6.13.2",
    "focus-trap-react": "^11.0.3",
    "framer-motion": "^11.3.9",
    "fs": "^0.0.1-security",
    "get-port-please": "^3.1.2",
    "gif-picker-react": "^1.4.0",
    "highlight.js": "^11.11.1",
    "hls.js": "^1.6.5",
    "js-cookie": "^3.0.5",
    "js-sha256": "^0.11.0",
    "js-yaml": "^4.1.0",
    "jwt-decode": "^4.0.0",
    "lexical": "^0.16.1",
    "lodash": "^4.17.21",
    "luxon": "^3.6.1",
    "mark.js": "^8.11.1",
    "minidump": "^0.26.0",
    "moment-timezone": "^0.5.46",
    "next": "15.5.2",
    "next-redux-wrapper": "^8.1.0",
    "node-cron": "^3.0.3",
    "p-limit": "^6.2.0",
    "p-retry": "^6.2.1",
    "pdfjs-dist": "^4.4.168",
    "react": "19.1.0",
    "react-bootstrap": "^2.10.4",
    "react-chartjs-2": "^5.2.0",
    "react-dom": "19.1.0",
    "react-error-boundary": "^6.0.0",
    "react-markdown": "^9.0.1",
    "react-redux": "^9.1.2",
    "react-scroll": "^1.9.0",
    "react-share": "^5.1.0",
    "react-toastify": "^10.0.5",
    "react-toggle": "^4.1.3",
    "react-tooltip": "^5.28.1",
    "react-tweet": "^3.2.1",
    "react-use": "^17.5.0",
    "react-use-downloader": "^1.2.8",
    "react-zoom-pan-pinch": "^3.7.0",
    "read-last-lines": "^1.8.0",
    "reflect-metadata": "^0.2.2",
    "rehype-external-links": "^3.0.0",
    "rehype-sanitize": "^6.0.0",
    "remark-gfm": "^4.0.0",
    "sass": "^1.77.6",
    "swiper": "^11.1.4",
    "tail": "^2.2.6",
    "tailwind-scrollbar": "^3.1.0",
    "three": "^0.163.0",
    "typeorm": "^0.3.26",
    "use-debounce": "^10.0.3",
    "uuid": "^10.0.0",
    "viem": "^2.31.3",
    "wagmi": "^2.15.6"
  },
  "devDependencies": {
    "@aws-sdk/client-s3": "^3.637.0",
    "@playwright/test": "^1.48.0",
    "@tanstack/eslint-plugin-query": "^5.43.1",
    "@testing-library/jest-dom": "^6.6.3",
    "@types/better-sqlite3": "^7.6.10",
    "@types/electron-localshortcut": "^3.1.3",
    "@types/js-cookie": "^3.0.6",
    "@types/js-yaml": "^4.0.9",
    "@types/lodash": "^4.17.13",
    "@types/luxon": "^3.6.2",
    "@types/mark.js": "^8.11.12",
    "@types/node": "^20.14.6",
    "@types/node-cron": "^3.0.11",
    "@types/react": "^18.3.3",
    "@types/react-dom": "^18.3.0",
    "@types/react-scroll": "^1.8.10",
    "@types/react-toggle": "^4.0.5",
    "@types/tail": "^2.2.3",
    "@types/uuid": "^10.0.0",
    "@walletconnect/types": "^2.14.0",
    "arweave": "^1.15.1",
    "autoprefixer": "^10.4.19",
    "electron": "^36.0.0",
    "electron-builder": "^24.13.3",
    "electron-rebuild": "^3.2.9",
    "eslint": "^8.57.0",
    "eslint-config-next": "15.3.2",
    "eslint-plugin-unused-imports": "^4.1.4",
    "node-abi": "^4.14.0",
    "pino-pretty": "^13.0.0",
    "postcss": "^8.4.38",
    "rimraf": "^6.0.1",
    "tailwindcss": "^3.4.4",
    "tsx": "^4.19.3",
    "typescript": "^5.4.5"
  },
  "overrides": {
    "@emoji-mart/react": {
      "react": "$react",
      "react-dom": "$react-dom"
    },
    "react-toggle": {
      "react": "$react",
      "react-dom": "$react-dom"
    }
  }
}
